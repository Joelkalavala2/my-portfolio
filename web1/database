<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Contact Messages - Admin</title>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Montserrat:wght@400;700&display=swap" rel="stylesheet">
    <style>
        body {
            font-family: 'Montserrat', sans-serif;
            background-color: #f4f7f6;
            margin: 0;
            padding: 20px;
            color: #333;
        }
        .container {
            max-width: 1200px;
            margin: 20px auto;
            background-color: #ffffff;
            padding: 30px;
            border-radius: 8px;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
        }
        h1 {
            color: #0056b3;
            text-align: center;
            margin-bottom: 30px;
        }
        table {
            width: 100%;
            border-collapse: collapse;
            margin-top: 20px;
        }
        th, td {
            padding: 12px 15px;
            border: 1px solid #ddd;
            text-align: left;
            vertical-align: top; /* Align content to top for better multi-line message display */
        }
        th {
            background-color: #007bff;
            color: white;
            font-weight: 700;
            text-transform: uppercase;
        }
        tr:nth-child(even) {
            background-color: #f2f2f2;
        }
        tr:hover {
            background-color: #e9ecef;
        }
        .loading-message {
            text-align: center;
            font-style: italic;
            color: #666;
            margin-top: 20px;
        }
        .error-message {
            text-align: center;
            color: #dc3545;
            font-weight: bold;
            margin-top: 20px;
        }
        .delete-btn {
            background-color: #dc3545;
            color: white;
            border: none;
            padding: 8px 12px;
            border-radius: 5px;
            cursor: pointer;
            font-size: 0.9em;
            transition: background-color 0.3s ease;
        }
        .delete-btn:hover {
            background-color: #c82333;
        }
        .delete-btn:disabled {
            background-color: #cccccc;
            cursor: not-allowed;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>Contact Form Submissions</h1>
        <div id="loading" class="loading-message">Loading messages...</div>
        <div id="error" class="error-message" style="display:none;"></div>
        <table id="messagesTable" style="display:none;">
            <thead>
                <tr>
                    <th>Name</th>
                    <th>Email</th>
                    <th>Message</th>
                    <th>Date Sent</th>
                    <th>Actions</th> <!-- New column for delete button -->
                </tr>
            </thead>
            <tbody>
                <!-- Messages will be inserted here by JavaScript -->
            </tbody>
        </table>
    </div>

    <!-- Firebase SDKs - Make sure these paths are correct -->
    <script src="https://www.gstatic.com/firebasejs/9.0.0/firebase-app-compat.js"></script>
    <script src="https://www.gstatic.com/firebasejs/9.0.0/firebase-firestore-compat.js"></script>
    <script src="https://www.gstatic.com/firebasejs/9.0.0/firebase-auth-compat.js"></script>

    <script>
        // Your Firebase project configuration
        // IMPORTANT: Use the SAME firebaseConfig as in your index.html
        const firebaseConfig = {
            apiKey: "AIzaSyCcr3Z6CXtlCgdpTrLah2kTeT46JT10Ui8",
            authDomain: "portfolio-a08e8.firebaseapp.com",
            databaseURL: "https://portfolio-a08e8-default-rtdb.firebaseio.com",
            projectId: "portfolio-a08e8",
            storageBucket: "portfolio-a08e8.firebasestorage.app",
            messagingSenderId: "532692232417",
            appId: "1:532692232417:web:a37622c5a77b207b8f2fa0",
            measurementId: "G-FMWYYY17D2"
        };

        // Initialize Firebase
        firebase.initializeApp(firebaseConfig);
        const db = firebase.firestore();
        const auth = firebase.auth();

        const messagesTableBody = document.querySelector('#messagesTable tbody');
        const loadingMessage = document.getElementById('loading');
        const errorMessage = document.getElementById('error');
        const messagesTable = document.getElementById('messagesTable');

        // Function to delete a message
        async function deleteMessage(docId, rowElement) {
            if (!confirm('Are you sure you want to delete this message? This action cannot be undone.')) {
                return; // User cancelled the deletion
            }

            // Disable the button to prevent multiple clicks
            const deleteButton = rowElement.querySelector('.delete-btn');
            if (deleteButton) {
                deleteButton.disabled = true;
                deleteButton.textContent = 'Deleting...';
            }

            try {
                // Ensure user is authenticated before attempting delete
                if (!auth.currentUser) {
                    await auth.signInAnonymously();
                    console.log("Signed in anonymously for delete access.");
                }

                await db.collection('messages').doc(docId).delete();
                rowElement.remove(); // Remove the row from the HTML table
                alert('Message deleted successfully!');
                
                // Check if table is empty after deletion
                if (messagesTableBody.children.length === 0) {
                    messagesTableBody.innerHTML = '<tr><td colspan="5">No messages found.</td></tr>'; // Update colspan
                }

            } catch (error) {
                console.error("Error deleting message:", error);
                alert(`Failed to delete message: ${error.message}`);
                // Re-enable button on error
                if (deleteButton) {
                    deleteButton.disabled = false;
                    deleteButton.textContent = 'Delete';
                }
            }
        }

        async function fetchMessages() {
            try {
                loadingMessage.style.display = 'block'; // Show loading message
                errorMessage.style.display = 'none'; // Hide any previous error

                // Authenticate anonymously for read/delete access
                await auth.signInAnonymously();
                console.log("Signed in anonymously for read/delete access.");

                const querySnapshot = await db.collection('messages').orderBy('timestamp', 'desc').get();
                
                messagesTableBody.innerHTML = ''; // Clear existing content

                if (querySnapshot.empty) {
                    messagesTableBody.innerHTML = '<tr><td colspan="5">No messages found.</td></tr>'; // Updated colspan
                } else {
                    querySnapshot.forEach(doc => {
                        const data = doc.data();
                        const row = messagesTableBody.insertRow();
                        row.setAttribute('data-doc-id', doc.id); // Store Firestore document ID on the row

                        const nameCell = row.insertCell();
                        nameCell.textContent = data.name || 'N/A';

                        const emailCell = row.insertCell();
                        emailCell.textContent = data.email || 'N/A';

                        const messageCell = row.insertCell();
                        messageCell.textContent = data.message || 'N/A';

                        const dateCell = row.insertCell();
                        if (data.timestamp && data.timestamp.toDate) {
                            dateCell.textContent = data.timestamp.toDate().toLocaleString();
                        } else {
                            dateCell.textContent = 'N/A';
                        }

                        // Add Actions cell with delete button
                        const actionsCell = row.insertCell();
                        const deleteButton = document.createElement('button');
                        deleteButton.textContent = 'Delete';
                        deleteButton.classList.add('delete-btn');
                        deleteButton.addEventListener('click', () => {
                            deleteMessage(doc.id, row); // Pass doc ID and the row element
                        });
                        actionsCell.appendChild(deleteButton);
                    });
                }
                messagesTable.style.display = 'table'; // Show the table
            } catch (error) {
                console.error("Error fetching messages:", error);
                errorMessage.textContent = `Error loading messages: ${error.message}`;
                errorMessage.style.display = 'block';
            } finally {
                loadingMessage.style.display = 'none'; // Hide loading message
            }
        }

        // Fetch messages when the page loads
        document.addEventListener('DOMContentLoaded', fetchMessages);
    </script>
</body>
</html>
